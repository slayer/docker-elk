input {
  beats {
    port => 5044
    ssl => false
  }
}

input {
  udp {
    port => 5959
    codec => json
  }
}

input {
  tcp {
    port => 12345
    codec => json
  }
}

filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
}

# filter {
#   if [type] == "nginx-access" {
#     grok {
#       match => { "message" => "%{NGINXACCESS}" }
#     }
#   }
# }

# filter our ascii colors
filter {
  mutate {
    gsub => ["short_message", "\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]", ""]
  }
}

filter {
  mutate {
    convert => {
      "level" => "string"
    }
  }
}

# rename "short_message"
filter {
  mutate {
    rename =>  { "short_message" => "message" }
  }
}

# extract "message" if json
filter {
  json {
    skip_on_invalid_json => true
    source => "message"
    # target => "message"
  }
}

# move "ip", "request_id" to top level
filter {
  if [meta] {
    mutate {
      add_field => {
        "ip" => "%{[meta][ip]}"
        "request_id" => "%{[meta][request_id]}"
      }
      remove_field => [ "%{[meta][ip]}", "%{[meta][request_id]}"]
    }
    json_encode {
      source => "meta"
      target => "meta"
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch"]
    manage_template => false
    index => "q5-%{+YYYY.MM.dd}"
    # index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
    # document_type => "%{[@metadata][type]}"
  }

  stdout {
    codec => rubydebug
  }
}
